<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  throwConfigExceptions="true"
	  autoReload="true">
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
		<add assembly="NLog.AWS.Logger" />
        <add assembly="NLog.Targets.ElasticSearch"/>
	</extensions>

	<variable name="dir" value="..\Logs\"/>
	<variable name="name" value="web"/>

	<targets  async="true">
		<default-target-parameters type="File" maxArchiveDays="30" archiveNumbering="DateAndSequence" archiveEvery="Day" enableArchiveFileCompression="true" archiveAboveSize="52428800" archiveDateFormat="MM-dd"  layout="${date:format=yyyy-MM-dd HH\:mm\:ss,fff} ${level:uppercase=true} [${threadid}] ${logger} - ${message} ${exception:format=ToString}"/>
		<target name="web" type="File" fileName="${var:dir}${var:name}.log" />
		<target name="sql" type="File" fileName="${var:dir}${var:name}.sql.log" layout="${date:universalTime=true:format=yyyy-MM-dd HH\:mm\:ss,fff}|${threadid}|${event-properties:item=elapsed}|${replace:inner=${event-properties:item=commandText}:searchFor=\\r\\n|\\s:replaceWith= :regex=true}|${event-properties:item=parameters}"/>
		<target name="ownFile-web" type="File" fileName="${var:dir}${var:name}.asp.log" layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />
		<target name="lifetimeConsole" type="Console" layout="${MicrosoftConsoleLayout}" />
 		
		<target name="elastic" xsi:type="BufferingWrapper" flushTimeout="5000">
		  <target xsi:type="ElasticSearch" includeAllProperties="true" />
		</target>
	</targets>
	<rules>
		<logger name="ASC.Api.Core.Auth.CookieAuthHandler" maxlevel="Off" final="true" />
		<logger name="ASC.SQL" minlevel="Debug" writeTo="sql" final="true" />
		<logger name="ASC*" minlevel="Debug" writeTo="web">
			<filters defaultAction="Log">
				<when condition="regex-matches('${scope-property:RequestPath}', '^/health/?$', 'ignorecase,singleline')" action="Ignore" /> 
			</filters>
		</logger>
		<logger name="Microsoft.AspNetCore.Hosting.Diagnostics" minlevel="Debug" writeTo="ownFile-web" final="true">
			<filters defaultAction="Log">
				<when condition="regex-matches('${scope-property:RequestPath}', '^/health/?$', 'ignorecase,singleline')" action="Ignore" /> 
			</filters>
		</logger>
		<logger name="Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware" maxlevel="Information" writeTo="ownFile-web" final="true" />
		<logger name="Microsoft.*" maxlevel="Off" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />
	</rules>
</nlog>