server:
  host: ${SERVER_ADDRESS:127.0.0.1}
  port: ${SERVER_PORT:8080}
  servlet:
    session:
      tracking-modes: cookie

docspace:
  server:
    url: ${DOCSPACE_ADDRESS:http://127.0.0.1}

spring:
  application:
    name: ${SPRING_APPLICATION_NAME:ASC.Identity.Authorization}
  profiles:
    active: ${PROFILE:dev}
  datasource:
    url: jdbc:mysql://${JDBC_URL:127.0.0.1:33060}/${JDBC_DATABASE:docspace}
    username: ${JDBC_USER_NAME:root}
    password: ${JDBC_PASSWORD:my-secret-pw}
    driver-class-name: com.mysql.cj.jdbc.Driver
  rabbitmq:
    host: ${RABBIT_HOST:127.0.0.1}
    port: ${RABBIT_PORT:5672}
    username: ${RABBIT_USER_NAME:guest}
    password: ${RABBIT_PASSWORD:guest}
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          max-interval: 3000
          multiplier: 3.0
    messaging:
      configuration:
        properties:
          authorization:
            exchange: asc_identity_authorization_exchange
            queue: asc_identity_authorization_queue
            routing: asc_identity_authorization_routing
            deadExchange: asc_identity_authorization_dlx
            deadQueue: asc_identity_authorization_dlq
            deadRouting: asc_identity_authorization_dlr
          consent:
            exchange: asc_identity_consent_exchange
            queue: asc_identity_consent_queue
            routing: asc_identity_consent_routing
            deadExchange: asc_identity_consent_dlx
            deadQueue: asc_identity_consent_dlq
            deadRouting: asc_identity_consent_dlr
  security:
    oauth2:
      server:
        issuer: ${ISSUER_ADDRESS:http://127.0.0.1:8080}
      registered:
        client:
          accessTokenMinutesTTL: ${REGISTERED_CLIENT_ACCESS_TOKEN_TTL:60}
          refreshTokenDaysTTL: ${REFRESH_TOKEN_TTL:365}
          authorizationCodeMinutesTTL: ${AUTHORIZATION_CODE_TTL:1}
  cloud:
    loadbalancer:
      ribbon:
        enable: false
    openfeign:
      circuitbreaker:
        enabled: true
        alphanumeric-ids: true
      client:
        config:
          default:
            connectTimeout: 1500
            readTimeout: 3000
    config:
      enabled: false
    discovery:
      client:
        composite-indicator:
          enabled: false
  jpa:
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
        dialect: org.hibernate.dialect.MySQLDialect

resilience4j:
  bulkhead:
    instances:
      docspaceBulkhead:
        maxConcurrentCalls: 100
        maxWaitDuration: 400ms
  ratelimiter:
    configs:
      default:
        limitRefreshPeriod: 1s
        limitForPeriod: 1000
        timeoutDuration: 500ms
        registerHealthIndicator: true
        eventConsumerBufferSize: 100
    instances:
      getRateLimiter:
        baseConfig: default
      mutateRateLimiter:
        baseConfig: default

management:
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
    diskspace:
      enabled: false
    refresh:
      enabled: false
  endpoints:
    web:
      base-path:
      path-mapping:
        health: /health
      exposure:
        include: 'health'
  endpoint:
    health:
      probes:
        enabled: true
      show-details: 'always'
    env:
      post:
        enabled: true

logging:
  config: classpath:log4j2.xml
  level:
    root: INFO
    org:
      hibernate:
        stat: DEBUG
        SQL: DEBUG
---
spring:
  config:
    activate:
      on-profile: dev
logging:
  config: classpath:log4j2-dev.xml