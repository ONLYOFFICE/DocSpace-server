services:
  registration-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        MODULE: registration/registration-container
    image: registration-service:latest
    ports:
      - "8080:8080"
    environment:
      SERVER_PORT: 8080
      SPRING_PROFILES_ACTIVE: dev,saas
      SPRING_APPLICATION_NAME: ASC.Identity.Registration
      JDBC_URL: onlyoffice-mysql-server:3306
      JDBC_DATABASE: docspace
      JDBC_USER_NAME: root
      JDBC_PASSWORD: my-secret-pw
      REDIS_HOST: onlyoffice-redis
      RABBIT_HOST: onlyoffice-rabbitmq
      RABBIT_URI: amqp://guest:guest@onlyoffice-rabbitmq/
      GRPC_CLIENT_AUTHORIZATION_ADDRESS: static://authorization-service:9999
      SPRING_CLOUD_AWS_DYNAMODB_ENDPOINT: http://dynamodb-local:8000
      SPRING_CLOUD_AWS_DYNAMODB_ACCESS_KEY: dummy
      SPRING_CLOUD_AWS_DYNAMODB_SECRET_KEY: dummy
    depends_on:
      migration-runner:
        condition: service_completed_successfully
      onlyoffice-mysql-server:
        condition: service_healthy
      onlyoffice-rabbitmq:
        condition: service_started
      onlyoffice-redis:
        condition: service_started
      dynamodb-local:
        condition: service_started
    networks:
      - onlyoffice

  authorization-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        MODULE: authorization/authorization-container
    image: authorization-service:latest
    ports:
      - "9090:9090"
    environment:
      SERVER_PORT: 9090
      SPRING_PROFILES_ACTIVE: dev,saas
      SPRING_APPLICATION_NAME: ASC.Identity.Authorization
      JDBC_URL: onlyoffice-mysql-server:3306
      JDBC_DATABASE: docspace
      JDBC_USER_NAME: root
      JDBC_PASSWORD: my-secret-pw
      REDIS_HOST: onlyoffice-redis
      RABBIT_HOST: onlyoffice-rabbitmq
      RABBIT_URI: amqp://guest:guest@onlyoffice-rabbitmq/
      GRPC_CLIENT_REGISTRATION_ADDRESS: static://registration-service:8888
      # Updated DynamoDB configuration to match application.yml
      SPRING_CLOUD_AWS_DYNAMODB_ENDPOINT: http://dynamodb-local:8000
      SPRING_CLOUD_AWS_DYNAMODB_ACCESS_KEY: dummy
      SPRING_CLOUD_AWS_DYNAMODB_SECRET_KEY: dummy
    depends_on:
      migration-runner:
        condition: service_completed_successfully
      onlyoffice-mysql-server:
        condition: service_healthy
      onlyoffice-rabbitmq:
        condition: service_started
      onlyoffice-redis:
        condition: service_started
      dynamodb-local:
        condition: service_started
    networks:
      - onlyoffice

  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb"
    networks:
      - onlyoffice
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/shell/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin:latest
    ports:
      - "8001:8001"
    environment:
      DYNAMO_ENDPOINT: http://dynamodb-local:8000
      AWS_ACCESS_KEY_ID: dummy
      AWS_SECRET_ACCESS_KEY: dummy
      AWS_REGION: local
    depends_on:
      - dynamodb-local
    networks:
      - onlyoffice